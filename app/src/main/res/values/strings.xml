<resources>
    <string name="app_name">大富翁测试</string>
    <string name="action_settings">Settings</string>
    <string name="chain_home_empty">Now we only have EOS tests</string>
    <string name="no_server_available">No available server</string>
    <string name="available_servers">Available servers:\n%1$s</string>
    <string name="processing">Processing</string>
    <string name="get_info_error">Failed to get requested info.</string>
    <string name="regenerate">Regenerate</string>
    <string name="input_account_name">Input account name</string>
    <string name="eos_account_length_err">Account name illegal, it should be 12 characters and only contains a-z,1-5.</string>
    <string name="input_block_num">Input block No.</string>
    <string name="block_num_error">Could only input positive integer</string>
    <string name="get_abi_account_err">Please input correct account which you want query ABI.</string>
    <string name="copy_to_clipboard">Copy to Clip board</string>
    <string name="content_copyed_to_clipboard">Result had been copied to Clip board.</string>
    <string name="input_contract_name">Input contract name</string>
    <string name="input_table_name">Input table name</string>
    <string name="get_table_row_input_err">Invalid input,all informations should be filled.</string>
    <string name="input_wallet_name">Input wallet name</string>
    <string name="wallet_pswd_notify">Here is password for this wallet,please remember it,in other tests we may use this password to unlock the wallet to signature the transaction.:\n%1$s</string>
    <string name="wallet_create_failed">Wallet create failed.</string>
    <string name="wallet_empty">No wallet now, you need to create a wallet first.</string>
    <string name="wallet_list_info">wallet with "*" is unlocked.</string>
    <string name="list_wallets">List wallets</string>
    <string name="input_pswd_to_unlock_wallet">Input password to unlock this wallet.</string>
    <string name="create_wallet">Create wallet</string>
    <string name="imported_keys">Here are the imported keys:</string>
    <string name="generated_keys">Private Key:%1$s\nPublic Key:%2$s</string>
    <string name="import_key">Import</string>
    <string name="create_key">Create and import keys</string>
    <string name="input_args">Input arguments</string>
    <string name="from">From</string>
    <string name="to">To</string>
    <string name="amount">Amount</string>
    <string name="memo">Memo</string>
    <string name="input_private_for_import">Input the private key you wish to import.</string>
    <string name="account_pay_for_ram">Account pay for the ram.</string>
    <string name="account_receive_ram">Account receive the ram.</string>
    <string name="how_much_ram_to_buy">How much RAM to buy.(in Byte)</string>
    <string name="illegal_ram_input">Illegal ram byte to buy</string>
    <string name="account_sell_ram">Account wish to sell ram</string>
    <string name="bytes_to_sell">How much RAM to sell (by Bytes)</string>
    <string name="bytes_to_sell_kb">How much RAM to sell (by kB)</string>
    <string name="account_pay_for_res">Account pay for cpu/net</string>
    <string name="account_receive_res">Account receive cpu/net</string>
    <string name="eos_for_cpu">How much EOS for CPU (only input integer,ex. "1")</string>
    <string name="eos_for_net">How much EOS for NET (only input integer,ex. "1")</string>
    <string name="illegal_cpu_net">Illegal input of CPU/NET</string>
    <string name="browser_info">Please input the account name which you wish to browse.\nWill use get_abi to query the contracts supplied in this account.</string>
    <string name="empty_input">Some input is empty.</string>
    <string name="get_abi_err">get_abi failed, please retry.</string>
    <string name="remember_wallets">Remember wallet password</string>
    <string name="no_wallet_alert">No wallet created now,some operations need create wallet and import private key.\nYou can click "list wallets" to view current wallets and create a new one.</string>
    <string name="private_key_import_fail">Invalid private key, please check and input carefully.</string>
    <string name="offset">offset</string>
    <string name="pos">pos</string>
    <string name="invalid_pos_or_offset">Invalid pos or offset</string>
    <string name="transaction_id">Transaction id</string>
    <string name="action">Action</string>
    <string name="binargs">Binargs</string>
    <string name="price_info">Get latest trade from %1$s ,amount:%2$s,price:%3$s.</string>
    <string name="price_info_detail">Get latest trade info from %1$s.\n
        price of 24h before:%2$s.\n
        price of now:%3$s. \n
        highest price:%4$s.\n
        lowest price:%5$s.\n
        amount:%6$s.\n
        volumn:%7$s.</string>
    <string name="account_balance_info">Balance of %1$s:%2$f\n
        Details:\n
            liquid eos:%3$f\n
            ram:%4$d Byte\n
            cpu:%5$f\n
            net:%6$f\n
            total eos:%7$f\n
            price:%8$f</string>
    <string name="ram_trade_notice">Will query ram price every x minutes you entered.\n
        If it meets your designated price, will execute it.\n
        Attention:this task is in RAM, so if this app closed, it will not be executed anymore.</string>
    <string name="buy_ram">Buy RAM</string>
    <string name="sell_ram">Sell RAM</string>
    <string name="buy_ram_eos_amount">How many EOS to pay,must be xx.xxxx,ex. "10.0000",or it will fail.</string>
    <string name="buy_ram_price_hint">Price you wish to buy RAM.(/kB)</string>
    <string name="sell_ram_price_hint">Price you wish to sell RAM.(/kB)</string>
    <string name="ram_trade_retry_time_hint">How long time wish to retry(int,/minutes)</string>
    <string name="buy_it">Buy it</string>
    <string name="sell_it">Sell it</string>
    <string name="pending_buy_ram">Pending buy RAM tasks:</string>
    <string name="pending_sell_ram">Pending sell RAM tasks:</string>
    <string name="check_balance">Check balance</string>
    <string name="check_balance_result">Liquid EOS:%1$f\n
        RAM:%2$f kB\n
        CPU:%3$f\n
        NET:%4$f</string>
    <string name="check_time_alert">Need >0, and be integer, will try get ram price every x minutes. </string>
    <string name="buy_task_info">Trying to buy %1$s EOS RAM on price %2$f EOS/kB,will retry every %3$d minutes</string>
    <string name="sell_task_info">Trying to sell %1$f kBytes RAM on price %2$f EOS/kB,will retry every %3$d minutes.</string>
    <string name="get_price_fail_info">Failed to get price from Huobi,If you are running this in China, you need to pass the Great Wall.</string>
    <string name="monopoly_desc">游戏规则：\n
跟大家平常玩的大富翁差不多。\n
有100个城市，掷骰子（自动）产生步数，人物就可以向前走，走到有主人的城市需要交过路费，也可以买下这个城市。如果有过路费，必须交过过路费才能继续往前走。\n
用户可以针对自己的城市设置logo，img,url等，类似广告位，游戏结束后这些就永久是该用户的了。\n
没有监狱、机会那些。也没有走一圈自动发钱（如果需要发游戏币，可以考虑加）\n
\n
一些设定：\n
初始城市价格1EOS，每位玩家购买后，价格要上升125%。其中110%归上一位玩家，15%进入奖池。\n
当最后一次购买城市后，如果3天之内没有任何人再次购买城市，则游戏结束，此时运营方开始分发奖池。\n
奖池分3部分，40%由所有城市的最终主人按当前价格比例分，35%归最后一位买城市的玩家，25%归游戏运营团队\n
玩家的所得（过路费，卖城市升值部分，奖池分红）记录在其游戏余额中，可以随时提现成EOS\n
所有逻辑均在合约中，完全去中心化。\n
\n
示例：\n
玩家A开始玩游戏，走到城市1，并买下，此时花费1EOS\n
玩家B此时玩游戏，走到城市1，需交0.1EOS的过路费（不交不能往前走），可以买下该城市，此时售价1.25EOS，其中1.1EOS归玩家A，0.15EOS进入奖池\n
\n
测试app玩法：\n
1.当前部署在麒麟测试网，需要先到麒麟测试网注册账号，领EOS(测试网可以免费领），购买CPU,NET,RAM\n
2.将测试网上生成的私钥导入到测试app带的钱包（点钱包管理->新建钱包->导入私钥）。后续实际上线时可以集成Scatter就行了，就没这么麻烦了。\n
3.输入账号名，点开始，此时可以看到自己的各种状态，以及城市，奖池等\n
4.点前进、付租金、买当前城市、提款、设置logo等进行游戏。\n
\n
可以修改的设定：\n
城市数量/名字，城市初始价格，租金比例，价格增长比例，奖池比例等。\n
合约里并不记录城市名字，只有一个号码，所以可以在前端配置任何城市名字进去。\n
\n
运营：\n
可以考虑同时开展多个游戏，如全球大富翁，欧洲大富翁，美国大富翁，中国大富翁....\n
初始时游戏需要宣传时间，可能要自己玩一下，以免3天没有买卖直接结束。\n</string>
</resources>
